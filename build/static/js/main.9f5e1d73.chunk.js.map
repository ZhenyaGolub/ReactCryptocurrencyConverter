{"version":3,"sources":["components/ListOfCryptocurrencies.jsx","components/CurrencyExchange.jsx","redux/actions/changeInput.js","redux/actions/changeInputValue.js","redux/actions/changeSelect.js","redux/actions/changeUnitValue.js","redux/actions/fetchCryptocurrencies.js","App.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["ListOfCryptocurrencies","cryptocurrencies","useSelector","className","map","item","key","name","style","width","height","src","imageUrl","alt","fullName","price","volume24Hour","CurrencyExchange","dispatch","useDispatch","cryptocurrenciesNames","unitCost","firstActiveItem","secondActiveItem","firstInputValue","secondInputValue","value","onInput","e","Number","target","type","payload","changeFirstInput","onChange","changeFirstSelect","selected","changeSecondInput","changeSecondSelect","setCryptocurrenciesList","App","useEffect","axios","get","then","coins","data","Data","index","CoinInfo","Name","FullName","ImageUrl","RAW","USD","PRICE","toFixed","parseInt","VOLUME24HOUR","initialState","isLoaded","reducer","state","action","changeUnitCost","find","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5e1d73.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nfunction ListOfCryptocurrencies() {\n\n  const cryptocurrencies = useSelector(({cryptocurrencies}) => cryptocurrencies);\n\n    return (\n        <div className=\"converter__list\">\n      <div className=\"converter__currency-list\">\n        <table className=\"table\">\n          <thead>\n          <tr>\n          <th></th>\n    <th>Name</th>\n    <th>FullName</th>\n    <th>Price</th>\n    <th>Volume24Hour</th>\n   </tr>\n          </thead>\n          <tbody>\n          {\n          cryptocurrencies && cryptocurrencies.map((item) => <tr key={item.name}><td><img style={{width:'30px', height:'30px'}} src={item.imageUrl} alt=\"#\"/></td><td>{item.name}</td><td>{item.fullName}</td><td>${item.price}</td><td>${item.volume24Hour}</td></tr>)\n        }\n          </tbody>\n        </table>\n      </div>\n    </div>\n    )\n}\n\nexport default ListOfCryptocurrencies\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { changeFirstInput, changeSecondInput } from '../redux/actions/changeInput';\nimport { changeFirstSelect, changeSecondSelect } from '../redux/actions/changeSelect';\nimport { changeUnitValue } from '../redux/actions/changeUnitValue';\nimport { changeFirstInputValue, changeSecondInputValue } from '../redux/actions/changeInputValue';\n\nfunction CurrencyExchange() {\n\n  const dispatch = useDispatch();\n\n  const cryptocurrenciesNames = useSelector(({cryptocurrencies}) => cryptocurrencies);\n  const unitCost = useSelector(({unitCost}) => unitCost);\n  const firstActiveItem = useSelector(({firstActiveItem}) => firstActiveItem);\n  const secondActiveItem = useSelector(({secondActiveItem}) => secondActiveItem);\n  const firstInputValue = useSelector(({firstInputValue}) => firstInputValue);\n  const secondInputValue = useSelector(({secondInputValue}) => secondInputValue);\n\n  const handleChangeFirstInput = (value) => {\n    dispatch(changeFirstInput(value));\n    dispatch(changeFirstInputValue());\n  }\n\n  const handleChangeSecondInput = (value) => {\n    dispatch(changeSecondInput(value));\n    dispatch(changeSecondInputValue());\n  }\n\n  const handleChangeFirstSelect = (value) => {\n    dispatch(changeFirstSelect(value));\n    dispatch(changeUnitValue());\n    dispatch(changeSecondInputValue());\n  }\n\n  const handleChangeSecondSelect = (value) => {\n    dispatch(changeSecondSelect(value));\n    dispatch(changeUnitValue());\n    dispatch(changeFirstInputValue());\n  }\n\n    return (\n        <div className=\"converter__exchange\">\n      <div className=\"converter__exchange-block\">\n        <input value={firstInputValue} onInput={(e) => handleChangeFirstInput(Number(e.target.value))} type=\"number\" className=\"converter__input\"/>\n        <select className=\"converter__select\" onChange={(e) => handleChangeFirstSelect(e.target.value)}>\n          {\n            cryptocurrenciesNames.map((item) => <option selected={firstActiveItem === item.name ? true : false} key={item.name} value={item.name}>{item.name}</option>)\n          }\n        </select>\n      </div>\n      <div className=\"converter__exchange-block\">\n        <input value={secondInputValue} onInput={(e) => handleChangeSecondInput(Number(e.target.value))} type=\"number\" className=\"converter__input\"/>\n        <select className=\"converter__select\" onChange={(e) => handleChangeSecondSelect(e.target.value)}>\n        {\n            cryptocurrenciesNames.map((item) => <option selected={secondActiveItem === item.name ? true : false} key={item.name} value={item.name}>{item.name}</option>)\n          }\n        </select>\n      </div>\n        <h2 className=\"unit\">{unitCost}</h2>\n    </div>\n    )\n}\n\nexport default CurrencyExchange\n","export const changeFirstInput = (value) => ({\n    type: \"CHANGE_FIRST_INPUT\",\n    payload: value\n});\n\nexport const changeSecondInput = (value) => ({\n    type: \"CHANGE_SECOND_INPUT\",\n    payload: value\n});","export const changeFirstInputValue = () => ({\n    type: \"CHANGE_FIRST_INPUT_VALUE\",\n});\n\nexport const changeSecondInputValue = () => ({\n    type: \"CHANGE_SECOND_INPUT_VALUE\",\n});","export const changeFirstSelect = (value) => ({\n    type: \"CHANGE_FIRST_SELECT\",\n    payload: value\n});\n\nexport const changeSecondSelect = (value) => ({\n    type: \"CHANGE_SECOND_SELECT\",\n    payload: value\n});","export const changeUnitValue = () => ({\n    type: \"CHANGE_UNIT_VALUE\",\n});","import axios from \"axios\";\n\nexport const fetchCryptocurrencies = () => (dispatch) => {\n  axios.get('https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD').then(({data}) => {\n    const coins = data.Data.map((item, index) => {\n      const obj = {\n        name:item.CoinInfo.Name,\n        fullName:item.CoinInfo.FullName,\n        imageUrl:`https://cryptocompare.com/${item.CoinInfo.ImageUrl}`,\n        price:item.RAW.USD.PRICE.toFixed(3),\n        volume24Hour:parseInt(item.RAW.USD.VOLUME24HOUR)\n      }\n      return obj;\n    })\n    dispatch(setCryptocurrenciesList(coins));\n  });\n  };\n  \nexport const setCryptocurrenciesList = (cryptocurrencies) => ({\n  type: \"SET_CRYPTOCURRENCIES\",\n  payload: cryptocurrencies,\n});","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './scss/style.scss';\nimport ListOfCryptocurrencies from './components/ListOfCryptocurrencies';\nimport CurrencyExchange from './components/CurrencyExchange';\nimport { useDispatch } from 'react-redux';\nimport {fetchCryptocurrencies} from './redux/actions/fetchCryptocurrencies';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() =>{\n    dispatch(fetchCryptocurrencies());\n  },[]);\n\n  return (\n    <div className=\"main__block\">\n  <section className=\"converter\">\n   <ListOfCryptocurrencies/>\n    <CurrencyExchange/>\n  </section>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    cryptocurrencies: [],\n    isLoaded:false,\n    firstInputValue:1,\n    secondInputValue:1,\n    firstActiveItem:'BTC',\n    secondActiveItem:'ETH',\n    unitCost:0\n};\n\nconst reducer = (state = initialState, action) => {\n\n  const changeUnitCost = () => {\n    return(\n      (state.cryptocurrencies.find((item) => item.name === state.firstActiveItem).price / state.cryptocurrencies.find((item) => item.name === state.secondActiveItem).price).toFixed(2) + \" \" + state.cryptocurrencies.find((item) => item.name === state.secondActiveItem).fullName\n    )\n  }\n\n    if(action.type === \"SET_CRYPTOCURRENCIES\"){\n      return{\n        ...state,\n        cryptocurrencies:action.payload,\n        isLoaded:true,\n        unitCost:(action.payload[0].price / action.payload[1].price).toFixed(2) + \" \" + action.payload.find((item) => item.name === state.secondActiveItem).fullName,\n        secondInputValue:(action.payload[0].price / action.payload[1].price).toFixed(2)\n      }\n    }\n\n    if(action.type === \"CHANGE_FIRST_INPUT\"){\n      return{\n        ...state,\n        firstInputValue:action.payload,\n        secondInputValue:(state.cryptocurrencies.find((item) => item.name === state.firstActiveItem).price / state.cryptocurrencies.find((item) => item.name === state.secondActiveItem).price).toFixed(2) * state.firstInputValue,\n      }\n    }\n\n    if(action.type === \"CHANGE_SECOND_INPUT\"){\n      return{\n        ...state,\n        secondInputValue:action.payload,\n      }\n    }\n\n    if(action.type === \"CHANGE_FIRST_INPUT_VALUE\"){\n      return{\n        ...state,\n        secondInputValue:((state.cryptocurrencies.find((item) => item.name === state.firstActiveItem).price / state.cryptocurrencies.find((item) => item.name === state.secondActiveItem).price) * state.firstInputValue).toFixed(3)\n      }\n    }\n\n    if(action.type === \"CHANGE_SECOND_INPUT_VALUE\"){\n      return{\n        ...state,\n        firstInputValue:((state.cryptocurrencies.find((item) => item.name === state.secondActiveItem).price / state.cryptocurrencies.find((item) => item.name === state.firstActiveItem).price) * state.secondInputValue).toFixed(3)\n      }\n    }\n\n    if(action.type === \"CHANGE_FIRST_SELECT\"){\n      return{\n        ...state,\n        firstActiveItem:action.payload,\n      }\n    }\n\n    if(action.type === \"CHANGE_SECOND_SELECT\"){\n      return{\n        ...state,\n        secondActiveItem:action.payload,\n      }\n    }\n\n    if(action.type === \"CHANGE_UNIT_VALUE\"){\n      return{\n        ...state,\n        unitCost:changeUnitCost()\n      }\n    }\n\n    return state;\n}\n\nexport default reducer;","import {createStore, applyMiddleware, compose} from 'redux';\nimport reducer from './reducers/reducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}